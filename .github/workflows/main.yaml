on:
  - push
jobs:
  test:
    name: Test
    strategy:
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: '1.21'
      - name: Install Ginkgo
        run: go install github.com/onsi/ginkgo/ginkgo@latest
      - name: Run Tests
        run: make test
  build:
    name: Build
    strategy:
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
        plugin:
          - argocdproject
          - clusterroles
          - kustomizebuild
          - namespace
          - template
          - unnamespaced
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: '1.21'
      - name: Install helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: Make Plugin
        run: make ${{ matrix.plugin }}/plugin
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.plugin }}-${{ runner.os }}
          path: ./${{ matrix.plugin }}/plugin
  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.')
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
  publish-plugins:
    name: Publish Plugins
    needs: release
    strategy:
      matrix:
        os:
          - name: macOS
            kernel: darwin
          - name: Linux
            kernel: linux
        plugin:
          - argocdproject
          - clusterroles
          - kustomizebuild
          - namespace
          - template
          - unnamespaced
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download ${{ matrix.plugin }}-${{ matrix.os.name }} Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: ${{ matrix.plugin }}-${{ matrix.os.name }}
      - name: Upload ${{ matrix.plugin }}-${{ matrix.os.name }} Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: ./${{ matrix.plugin }}-${{ matrix.os.name }}/plugin
          asset_name: ${{ matrix.plugin }}-${{ matrix.os.kernel }}-amd64
          asset_content_type: application/octet-stream
  publish-script:
    name: Publish Script
    needs:
      - release
      - publish-plugins
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Update Git Tag
        run: sed "s/v0.0.0/${GITHUB_REF##*/}/g" -i ./hack/install.sh
      - name: Upload script Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: ./hack/install.sh
          asset_name: install.sh
          asset_content_type: text/x-shellscript
